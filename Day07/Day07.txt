빌트인 객체

Math
  Math.max(1,2) //2 -> 최댓값 //제일 높은 값은 뭐에요?
  Math.min(1,2,3,4,5) // -> 최소값 // 1
  Math.random() //
    Math.floor (Math.random() * 10 + 1)

    Math.floor (버림) - 음수
    Math.ceil (올림)
    Math.round (반올림)
    Math.trunc (절삭)

    Math.abs(-5) //5 -> 절대값
    Math.sqrt(a) //제곱근
    Math.cbrt(a) //


Number : 형변환 할때 주로 사용한다.
  Number.toString() //숫자를 문자열로 반환
  Number("5") //문자열을 숫자로 반환
  parseInt("5") // 문자열을 숫자로 반환
  


String
  "안녕하세요".length //5
  "안녕하세요".charAt(3) //
  "안녕하세요".concat("저는 김성용입니다") //안녕하세요 저는 김성용입니다.
  "".split //특정 기준 문자열을 분할하여 배열로 반환
  "안녕".repeat(2) //안녕안녕



Date
  날짜와 시간을 생성하는 빌트인 객체지만 잘 사용되지 않습니다.
  단점 : 사용자 (로컬 환경: 나만 사용할 수 있는 환경) 기준으로 시간을 다룹니다.
         서버의 시간을 가지고 올 수 있는 dayjs, momentjs, luxon 라이브러리(도구)를 사용

         UTC00 : 협정세계시

         UTC+09:00 : KST //-> 한국 시간이다.
       


Object



Array

------------------------------------------------------------------------------------

Map, Set

  해시 테이블 구조를 기반으로 하는 자료 구조의 한 종류
  해시 --암호화된 값 키와 값을 암호화하여 저장하여 데이터의 검색과 추가에 용이하도록 설계
  (ex) 300000개의 길이가 갖고 있는 배열에 특정 값이 존재하는지 
  includes() 300000개의 요소 중 같은 요소가 있는지 찾아서 비교

  암호화된 값을 데이터를 저장하여 해당 암호화 값이 일치하는지만 확인
  그리고 결과를 반환, 따라서 복잡한 데이터일수록 수십배는 빠른 속도로 데이터를 찾아낼 수 있습니다.

  Map 
    키가 있는 값을 저장하는 것은 객체와 유사
    Map은 문자열만 키로 지정할 수 있는 객체와 달리
    다양한 자료형(타입)을 키 값으로 설정할 수 있음

    Map
    [[key(any), value],[],[],[]]

    //순회 가능 forEach, for of 사용가능
    const 변수명 = new Map()
    변수명.set(key, value)
    변수명.get(key)
    변수명.has(key)
    변수명.delete(key)
    변수명.clear()
    변수명.size()


    Set
    중복을 허용하지 않는 값을 모아놓는 객체(배열)
    키가 없는 객체 value === key
    중복된 요소를 제거, 검색하는 요소로 사용

    while(Set.size < 7){
      set.add(random)
    }

    const 변수명 = new Set()
    변수명.add(value)
    변수명.delete(value)
    변수명.clear(value)
    변수명.size(value)

    ----------------------------------------------------------------------

    Object vs Map , Set

    1. 간단한 자료구조라면 Object
    2. 중복된 요소를 제거해야한다. Set
    3. 대용량의 데이터. Map
    

백엔드와의 데이터 통신

http response status code
400 ->  BAE REQUEST -> 이메일 양식
500 -> Network error -> 백엔드 서버


------------------------------------------------------------------------------------

ajax
Javascript 의 비동기 통신, 서버간의 데이터를 주고 받기 위해 만든 기능

axios / fetch
기존의 Web에서는 비동기 요청을 위해 XML로 데이터를 통신(ajax)
그러나 XML의 데이터 형태는 개발자의 의도에 따라 데이터를 변형하기가 어려움
이를 보완하기 위하여 HTTP요청에 최적화되어있고 편의성을 위한 추상화가 잘 되어있는 
도구들이 생겨나기 시작했음

*fetch
ES6부터 내장되어 안정성이 뛰어남
promise기반으로 생성되어 있어 간편하개 사용가능

백엔드 주소
fetch(url, {
  method: "post"  
  header: {
    "Accept": "application/json"
    "Authorization": "Bearer token"
  },
  body: JSON.stringfy({

    ...data
  })
...스트링 데이터만 주고받을 수 있다.
} .then((res)=>res.json()).then((res)=>console,log(response)))

------------------------------------------------------------------------------------

OPEN application
api를 무료로 사용할 수 있도록 공개해둔 것

API??
두 소프트웨어가 서로 통신할 수 있도록하는 매커니즘

REST API
  데이터(자원)을 이름으로 구분하여 사용 목적에 맞게 API를 구분한 것
  => API에 이름을 붙여준 것

method
  개발자끼리의 약속, 목적에 맞게 URL을 구분
  보통 백엔드 개발자가 임의적으로 설정, 프론드 엔드 개발자는 백엔드가
  정의한 메소드에 맞게 데이터를 전송

get
  얻다 가져오다. 
  request body에 data를 전송하지 못한다. 주소로만 통신

post
  물품을 보내는 것,생성
  request body에 data를 전송할 수 있다. 주소로도 보낼 수 있음


put
  놓다, 모든 데이터를 대체하는 것(수정)


patch
  작은 조각, 일부 데이터를 수정하는 것

delete
  삭제

단점: 데이터를 주고 받는 것에 있어서 하나의 URL과 method라고 한다면
동일한 데이터를 주고 받아야한다. 따라서 데이터 내용이 조금만 달라도 다른 URL을 생성해야
REST FULL하게 된다

-> json으로 데이터를 구분할 수 있는 : graphQL을 하게 된 계기

------------------------------------------------------------------------------------

자바스크립트의 실행 컨텍스트  : 자바스크립트가 브라우저에서 실행되는 환경
1.Global Execution Context (전역 실행 컨텍스트)
  처음으로 자바스크립트가 실행되면 생성되는 컨텍스트
  전역으로 생성되는 객체나 값을 관리

2. Function Execution Context(함수 샐행 컨텍스트)
    각 함수가 실행될 때 마다 생성되는 컨텍스트

3. 그 외

------------------------------------------------------------------------------------

1. 평가
    실행 컨텍스트가 생성된 후 변수나 함수 선언문들을 파악하여 현재 스코프에서 
    사용이 가능한 식별자등을 컨텍스트에 등록

    '호이스팅' 이라는 말은 원래 자바스크립트 공식 언어가 아닙니다.
    다만 평가 과정에서 변수들이 면저 등록되는 현상에 의하여 할당 전에 값이 인식 되는 것을
    개발자들 사이에서 호이스팅이라고 불렀을 뿐


2. 실행
    선언문을 제외한 호추르 실행과정에서 소스코드에 필요한 정보를 컨텍스트에서부터 찾고
    변수의 값이 변경되면 변수의 값을 초기화하여 재할당

------------------------------------------------------------------------------------

실행컨텍스트 내부
  LexicalEnvironment(켁시컬 환경)
    ->   스코프를 관리, 이 컨텍스트에서 사용할 수 있는 값들이 저장되는 공간
    Environment Record
      declarative Environment Record
      Object Environment Record

    OuterLexicalEnvironmentReference

